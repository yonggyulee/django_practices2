- 장고 프로젝트(django-practices) 만들기 -

1.
PyCharm에서 django-practices 프로젝트 만들기

2.
Django 설치
터미널에서
pip install django

3.
mysqlclient 설치
터미널에서
pip install mysqlclient

4.
장고 프로젝트 생성
터미널에서
django-admin startproject django-practices

5. 디렉토리 정리

6. settings.py 설정

    1) TIME_ZONE = 'Asia/Seoul'
    2) DATABASES = {
    	'default': {
 	        'ENGINE': 'django.db.backends.mysql',
        	'NAME': 'webdb',
        	'USER': 'webdb',
        	'PASSWORD': 'webdb',
        	'HOST': '127.0.0.1',
        	'PORT': 3306
    		}
	}

7.
기본적으로 장고 프로젝트가 관리하는 테이블을 생성
터미널에서
python manage.py migrate

8.
장고 프로젝트 관리 애플리케이션의 관리자 계정 생성하기
터미널에서
python manage.py createsuperuser

9. 지금까지 작업 내용 확인하기
1) 서버 시작하기
   터미널에서
   # python manage.py runserver 0.0.0.0:9999
2) 브라우저에서
   http://127.0.0.1:9999로 접근


===================================================================================

[장고 프로젝트의 Application 만들기]
1. Application 들의 통합 templates 디렉토리 만들기
    1) django_practices(프로젝트 루트)
                |------ templates
    2) settings.py 에 설정작업
        TEMPLATES 변수에 'DIRS': [os.path.join('BASEDIR','templates')] 세팅한다

2. helloworld Application 만들기
    1) 터미널에서
        # python manage.py startapp helloworld
    2) templates/helloworld 디렉토리 생성
    3) Application 등록
        settings.py의 INSTALLED_APPS에 추가한다.
    -----------------------------------------------------------------------------
    4) /hello url mapping (urls.py)

    -----------------------------------------------------------------------------
3. emaillist Application 만들기
    1) 터미널에서
        # python manage.py startapp emaillist
    2) templates/emaillist 디렉토리 생성
    3) Application 등록
        settings.py의 INSTALLED_APPS에 추가한다.

4. guestbook Application 만들기
    1) 터미널에서
        # python manage.py startapp guestbook
    2) templates/guestbook 디렉토리 생성
    3) Application 등록
        settings.py의 INSTALLED_APPS에 추가한다.